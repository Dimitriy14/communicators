// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/communicatorpb/communicator.proto

package communicatorpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Product struct {
	Amount               int32    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                float32  `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_37e0afd918cc8eca, []int{0}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Product) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type ProductRequest struct {
	Product              *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_37e0afd918cc8eca, []int{1}
}

func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (m *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(m, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type ProductResponse struct {
	Avg                  float32  `protobuf:"fixed32,1,opt,name=avg,proto3" json:"avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductResponse) Reset()         { *m = ProductResponse{} }
func (m *ProductResponse) String() string { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()    {}
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_37e0afd918cc8eca, []int{2}
}

func (m *ProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResponse.Unmarshal(m, b)
}
func (m *ProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResponse.Marshal(b, m, deterministic)
}
func (m *ProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResponse.Merge(m, src)
}
func (m *ProductResponse) XXX_Size() int {
	return xxx_messageInfo_ProductResponse.Size(m)
}
func (m *ProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResponse proto.InternalMessageInfo

func (m *ProductResponse) GetAvg() float32 {
	if m != nil {
		return m.Avg
	}
	return 0
}

type ProductSliceRequest struct {
	Product              []*Product `protobuf:"bytes,1,rep,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProductSliceRequest) Reset()         { *m = ProductSliceRequest{} }
func (m *ProductSliceRequest) String() string { return proto.CompactTextString(m) }
func (*ProductSliceRequest) ProtoMessage()    {}
func (*ProductSliceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_37e0afd918cc8eca, []int{3}
}

func (m *ProductSliceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductSliceRequest.Unmarshal(m, b)
}
func (m *ProductSliceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductSliceRequest.Marshal(b, m, deterministic)
}
func (m *ProductSliceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductSliceRequest.Merge(m, src)
}
func (m *ProductSliceRequest) XXX_Size() int {
	return xxx_messageInfo_ProductSliceRequest.Size(m)
}
func (m *ProductSliceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductSliceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductSliceRequest proto.InternalMessageInfo

func (m *ProductSliceRequest) GetProduct() []*Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func init() {
	proto.RegisterType((*Product)(nil), "communicator.Product")
	proto.RegisterType((*ProductRequest)(nil), "communicator.ProductRequest")
	proto.RegisterType((*ProductResponse)(nil), "communicator.ProductResponse")
	proto.RegisterType((*ProductSliceRequest)(nil), "communicator.ProductSliceRequest")
}

func init() {
	proto.RegisterFile("grpc/communicatorpb/communicator.proto", fileDescriptor_37e0afd918cc8eca)
}

var fileDescriptor_37e0afd918cc8eca = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x36, 0x1d, 0xeb, 0xe0, 0x4d, 0xe6, 0x78, 0xfe, 0x60, 0x88, 0xc2, 0x8c, 0x20, 0x3d, 0x6d,
	0x30, 0x0f, 0x9e, 0xeb, 0x41, 0xf1, 0xa6, 0xdd, 0xcd, 0x5b, 0x17, 0x1f, 0xa5, 0x60, 0x9b, 0x98,
	0x26, 0xf9, 0xa3, 0xfc, 0x2b, 0xc5, 0xa4, 0x93, 0x15, 0x2a, 0xbd, 0xe5, 0x7b, 0xf9, 0x7e, 0xc1,
	0x07, 0x77, 0x85, 0x56, 0x62, 0x2d, 0x64, 0x55, 0xd9, 0xba, 0x14, 0xb9, 0x91, 0x5a, 0xed, 0x3a,
	0x70, 0xa5, 0xb4, 0x34, 0x12, 0x8f, 0x0f, 0x6f, 0xfc, 0x01, 0x26, 0xaf, 0x5a, 0x7e, 0x58, 0x61,
	0xf0, 0x02, 0xe2, 0xbc, 0x92, 0xb6, 0x36, 0x0b, 0xb6, 0x64, 0xc9, 0x38, 0x6b, 0x11, 0x9e, 0xc1,
	0x58, 0xe9, 0x52, 0xd0, 0x22, 0x5a, 0xb2, 0x24, 0xca, 0x02, 0xe0, 0x29, 0xcc, 0x5a, 0x61, 0x46,
	0x5f, 0x96, 0x1a, 0x83, 0x6b, 0x98, 0xa8, 0x70, 0xf1, 0x06, 0xd3, 0xcd, 0xf9, 0xaa, 0x13, 0xbf,
	0xa7, 0xef, 0x59, 0xfc, 0x16, 0x4e, 0xfe, 0x2c, 0x1a, 0x25, 0xeb, 0x86, 0x70, 0x0e, 0xa3, 0xdc,
	0x15, 0x5e, 0x1f, 0x65, 0xbf, 0x4f, 0xfe, 0x04, 0xa7, 0x2d, 0x69, 0xfb, 0x59, 0x0a, 0xea, 0x0d,
	0x1b, 0x0d, 0x87, 0x6d, 0xbe, 0x19, 0x40, 0xea, 0x8a, 0x2d, 0x69, 0x57, 0x0a, 0xc2, 0x17, 0x88,
	0x9f, 0xc9, 0xa4, 0xae, 0xc0, 0xab, 0x7e, 0x61, 0xc8, 0xb9, 0xbc, 0xfe, 0xe7, 0x37, 0xf4, 0xe5,
	0x47, 0x09, 0xc3, 0x37, 0x98, 0x06, 0x2b, 0x5f, 0x10, 0x6f, 0x7a, 0x15, 0x87, 0xe5, 0x07, 0x4d,
	0x1f, 0xe7, 0xef, 0xb3, 0xee, 0x90, 0xbb, 0xd8, 0x8f, 0x77, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x56, 0x36, 0xde, 0x38, 0xe6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AvgServiceClient is the client API for AvgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AvgServiceClient interface {
	GetAvg(ctx context.Context, opts ...grpc.CallOption) (AvgService_GetAvgClient, error)
	GetAvgSlice(ctx context.Context, in *ProductSliceRequest, opts ...grpc.CallOption) (*ProductResponse, error)
}

type avgServiceClient struct {
	cc *grpc.ClientConn
}

func NewAvgServiceClient(cc *grpc.ClientConn) AvgServiceClient {
	return &avgServiceClient{cc}
}

func (c *avgServiceClient) GetAvg(ctx context.Context, opts ...grpc.CallOption) (AvgService_GetAvgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AvgService_serviceDesc.Streams[0], "/communicator.AvgService/GetAvg", opts...)
	if err != nil {
		return nil, err
	}
	x := &avgServiceGetAvgClient{stream}
	return x, nil
}

type AvgService_GetAvgClient interface {
	Send(*ProductRequest) error
	CloseAndRecv() (*ProductResponse, error)
	grpc.ClientStream
}

type avgServiceGetAvgClient struct {
	grpc.ClientStream
}

func (x *avgServiceGetAvgClient) Send(m *ProductRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *avgServiceGetAvgClient) CloseAndRecv() (*ProductResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ProductResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *avgServiceClient) GetAvgSlice(ctx context.Context, in *ProductSliceRequest, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := c.cc.Invoke(ctx, "/communicator.AvgService/GetAvgSlice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AvgServiceServer is the server API for AvgService service.
type AvgServiceServer interface {
	GetAvg(AvgService_GetAvgServer) error
	GetAvgSlice(context.Context, *ProductSliceRequest) (*ProductResponse, error)
}

// UnimplementedAvgServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAvgServiceServer struct {
}

func (*UnimplementedAvgServiceServer) GetAvg(srv AvgService_GetAvgServer) error {
	return status.Errorf(codes.Unimplemented, "method GetAvg not implemented")
}
func (*UnimplementedAvgServiceServer) GetAvgSlice(ctx context.Context, req *ProductSliceRequest) (*ProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAvgSlice not implemented")
}

func RegisterAvgServiceServer(s *grpc.Server, srv AvgServiceServer) {
	s.RegisterService(&_AvgService_serviceDesc, srv)
}

func _AvgService_GetAvg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AvgServiceServer).GetAvg(&avgServiceGetAvgServer{stream})
}

type AvgService_GetAvgServer interface {
	SendAndClose(*ProductResponse) error
	Recv() (*ProductRequest, error)
	grpc.ServerStream
}

type avgServiceGetAvgServer struct {
	grpc.ServerStream
}

func (x *avgServiceGetAvgServer) SendAndClose(m *ProductResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *avgServiceGetAvgServer) Recv() (*ProductRequest, error) {
	m := new(ProductRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AvgService_GetAvgSlice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductSliceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AvgServiceServer).GetAvgSlice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/communicator.AvgService/GetAvgSlice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AvgServiceServer).GetAvgSlice(ctx, req.(*ProductSliceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AvgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "communicator.AvgService",
	HandlerType: (*AvgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAvgSlice",
			Handler:    _AvgService_GetAvgSlice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAvg",
			Handler:       _AvgService_GetAvg_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "grpc/communicatorpb/communicator.proto",
}
